global !p
from math_snippet_helpers import *
endglobal

snippet addi "additionally" w
additionally
endsnippet

snippet ow "otherwise" w
otherwise $0
endsnippet

snippet l&ass "Let $$ and assume that" w
Let \$$1\$ and assume that
endsnippet

snippet otf "of the form" w
of the form $0
endsnippet

snippet wcs "we can see" w
we can see
endsnippet

snippet arg "argument" w
argument $0
endsnippet

snippet ftsoc "for the sake of contradiction" w
for the sake of contradiction $0
endsnippet

snippet seq "sequence" w
sequence $0
endsnippet

snippet den "denoted" w
denoted $0
endsnippet

snippet cld "called" w
called $0
endsnippet

snippet clr "color" w
color${1:ing} $0
endsnippet

snippet wst "we say that" w
we say that $0
endsnippet

snippet neq "not equal" w
not equal $0
endsnippet

snippet tech "technique" w
technique $0
endsnippet

snippet sel "selected" w
selected $0
endsnippet

snippet fxd "fixed" w
fixed 
endsnippet

snippet opt "options" w
options 
endsnippet

snippet aft "after" w
after 
endsnippet

snippet vac "vacuously" w
vacuously   
endsnippet

snippet ih "inductive hypothesis" w
inductive hypothesis 
endsnippet

snippet evt "everything" w
everything  
endsnippet

snippet win "wherein" w
wherein 
endsnippet

snippet cl "clause" w
clause
endsnippet

snippet clo "closed" w
closed  
endsnippet

snippet fina "finally" w
finally 
endsnippet

snippet wtp "want to prove" w
want to prove 
endsnippet

snippet jst "justified" w
justified 
endsnippet

snippet dedu "deduction" w
deduction 
endsnippet

snippet obt "obtain" w
obtain${1:s} 
endsnippet

snippet ccrt "concretely" w
concretely 
endsnippet

snippet cpx "complexity" w
complex${1:ity} 
endsnippet

snippet exa "exactly" w
exactly
endsnippet

snippet fund "fundamental" w
fundamental 
endsnippet

snippet csq "consequence" w
consequence 
endsnippet

snippet ind "induction" w
induction 
endsnippet

snippet ins "inspection" w
inspection 
endsnippet

snippet ojv "objective" w
objective 
endsnippet

snippet aw "as well" w
as well 
endsnippet

snippet ical "identical" w
identical 
endsnippet

snippet om "omit" w
omit 
endsnippet

snippet con "construct(ion)" w
construct${1:ion} 
endsnippet

snippet arb "arbitrary" w
arbitrary 
endsnippet

snippet wrt "with respect to" w
with respect to 
endsnippet

snippet can "canonical" w
canonical 
endsnippet

snippet sm "same" w
same 
endsnippet

snippet bal "but also" w
but also 
endsnippet

snippet und "understand" w
understand 
endsnippet

snippet sta "statement" w
statement 
endsnippet

snippet op "operation(s)" w
operation${1:s} 
endsnippet

snippet perf "perform" w
perform 
endsnippet

snippet q "question" w
question 
endsnippet

snippet wri "written" w
written 
endsnippet

snippet tir "their" w
their 
endsnippet


snippet dn "do not" w
do not 
endsnippet

snippet dne "does not exist" w
does not exist 
endsnippet

snippet wch "which" w
which 
endsnippet

snippet clr "clearly" w
clearly 
endsnippet

snippet ver "verified" w
verified 
endsnippet

snippet hvnt "have not" w
have not 
endsnippet

snippet smp "simply" w
simply 
endsnippet

snippet bef "before" w
before 
endsnippet

snippet cor "correct" w
correct 
endsnippet

snippet simp "simplify(ing)" w
simplify${1:ing} 
endsnippet

snippet cpt "compute" w
comput${1:ations} 
endsnippet

snippet sup "suppose" w
${1:s}uppose 
endsnippet

snippet Sup "Suppose" w
Suppose 
endsnippet

snippet subst "substitute" w
substitut${1:able}
endsnippet

snippet nm "namely" w
namely 
endsnippet

snippet occ "occurs" w
occurs 
endsnippet

snippet anz "analyze" w
analyze 
endsnippet

snippet exp "expand" w
expand${1:ing} 
endsnippet

snippet idn "identity" w
identity 
endsnippet

snippet resp "respectively" w
respectively 
endsnippet

snippet disc "discussed" w
discussed 
endsnippet

snippet desc "describe" w
describe 
endsnippet

snippet wn "we note" w
${1:w}e note 
endsnippet

snippet wc "(W/w)e commence" w
${1:w}e commence 
endsnippet

snippet alt "alternate" w
alternat${1:ively} 
endsnippet

snippet yld "yield(s)" w
yield${1:s} 
endsnippet

snippet wy "which yields" w
which yields 
endsnippet

snippet fst "first" w
first 
endsnippet

snippet slv "solve" w
solve 
endsnippet

snippet prev "previously" w
previously 
endsnippet

snippet sat "satisfy" w
satisfy 
endsnippet

snippet val "value(s)" w
value${1:s} 
endsnippet

snippet poss "possible" w
possible 
endsnippet

snippet fd "find(ing)" w
find${1:ing} 
endsnippet

snippet giv "given" w
given 
endsnippet

snippet mvr "moreover" w
${1:m}oreover 
endsnippet

snippet corr "corresponding" w
corresponding 
endsnippet

snippet app "appl(ying)" w
appl${1:ying} 
endsnippet

snippet fac "factor" w
factor 
endsnippet

snippet dir "direction" w
direction 
endsnippet

snippet on "only" w
only 
endsnippet

snippet trv "trivial" w
trivial 
endsnippet

snippet ntrv "trivial" w
non-trivial 
endsnippet

snippet invo "invokes" w
invoke${1:s} 
endsnippet

snippet indu "induce" w
induce${1:s} 
endsnippet

snippet gen "generate" w
generate 
endsnippet

snippet unq "unique" w
unique 
endsnippet

snippet mtd "method" w
method 
endsnippet

snippet gnt "guarenteed" w
guarenteed 
endsnippet

snippet elem "elementary" w
elementary 
endsnippet

snippet prcs "process" w
process 
endsnippet

snippet pro "procedure" w
procedure 
endsnippet

snippet eval "eval" w
evalulate 
endsnippet

snippet equa "equation" w
equation 
endsnippet

snippet eq "equal" w
equal 
endsnippet

snippet iden "identity" w
identity 
endsnippet

snippet lkw "likewise" w
likewise 
endsnippet

snippet cnt "cannot" w
cannot 
endsnippet

snippet imp "impossible" w
impossible 
endsnippet

snippet exc "exceed" w
exceed 
endsnippet

snippet proc "proceed" w
proceed 
endsnippet

snippet no "number" w
number${1:s} 
endsnippet

snippet cons "consider" w
consider 
endsnippet

snippet cnst "consists" w
consists 
endsnippet

snippet ind "indeed" w
indeed 
endsnippet

snippet rec "recall" w
${1:r}ecall 
endsnippet

snippet recog "recognize" w
recognize 
endsnippet

snippet dif "different" w
different 
endsnippet

snippet orig "original" w
original 
endsnippet

snippet std "standard" w
standard 
endsnippet

snippet sim "similar(ly)" w
similar${1:ly} 
endsnippet

snippet simlt "simultaneously" w
simultaneously 
endsnippet

snippet rep "represent" w
represent 
endsnippet

snippet eqv "equivalently" w
${1:e}quivalent${2:ly} 
endsnippet

snippet agr "agree" w
agree 
endsnippet

snippet inv "invert" w
invert${1:ible} 
endsnippet

snippet obs "observation" w
${1:o}bserv${2:ation} 
endsnippet

snippet wo "we observe" w
${1:w}e observe 
endsnippet

snippet conv "convert(s)" w
convert${1:s} 
endsnippet


snippet prop "propert(ies/y)" w
propert${1:ies} 
endsnippet

snippet th "that" w
that 
endsnippet

snippet tn "then" w
then 
endsnippet

snippet red "reduced" w
reduce${1:d} 
endsnippet

snippet areq "as required" w
as required. 
endsnippet

snippet aned "as needed" w
as needed. 
endsnippet

snippet prec "precisely" w
precisely 
endsnippet

snippet req "require" w
require 
endsnippet

snippet ti "that is" w
${1:t}hat is 
endsnippet

snippet wt "what" w
what 
endsnippet

snippet dt "determine(d)" w
determine${1:d} 
endsnippet

snippet sn "since" w
${1:s}ince 
endsnippet

snippet ts "thus" w
${1:t}hus 
endsnippet

snippet twh "thus we have" w
thus we have 
endsnippet

snippet stwh "so then we have" w
so then we have
endsnippet

snippet wah "we also have" w
we also have 
endsnippet

snippet wa "we also" w
we also 
endsnippet

snippet swk "so we know" w
so we know 
endsnippet

snippet ws "we say" w
we say 
endsnippet

snippet swh "so we have" w
so we have 
endsnippet

snippet aswht "and so we have that" w
and so we have that 
endsnippet

snippet ath "and that" w
and that 
endsnippet

snippet ww "(W/w)e will" w
${1:w}e will 
endsnippet

snippet Th "The" w
The 
endsnippet

snippet ass "assum(e/ing)" w
${1:a}ssum${2:ing} 
endsnippet

snippet wh "we have" w
${1:w}e have 
endsnippet

snippet wk "we know" w
${1:w}e know 
endsnippet

snippet twk "thus we know" w
${1:t}hus we know 
endsnippet

snippet ho "hold(s)" w
hold${1:s} 
endsnippet

snippet ia "is a" w
is a 
endsnippet

snippet ina "is not a" w
is not a 
endsnippet

snippet Ts "To show" w
To show 
endsnippet

snippet whts "we have to show" w
we have to show 
endsnippet

snippet wwts "we want to show" w
we want to show 
endsnippet

snippet wws "we will show" w
${1:w}e will show 
endsnippet

snippet wms "we must show" w
${1:w}e must show 
endsnippet

snippet oms "one must show" w
${1:o}ne must show 
endsnippet

snippet whs "we have shown" w
${1:w}e have shown 
endsnippet

snippet wwn "we will now" w
${1:w}e will now 
endsnippet

snippet wwp "we will prove" w
${1:w}e will prove 
endsnippet

snippet ift "it follows that" w
it follows that 
endsnippet

snippet fol "following" w
follow${1:ing} 
endsnippet

snippet st "such that" w
such that 
endsnippet

snippet sot "so that" w
so that 
endsnippet

snippet sotn "so then" w
so then 
endsnippet

snippet rc "recall" w
recall 
endsnippet

snippet bc "because" w
because 
endsnippet

snippet bcm "become(s)" w
become${1:s} 
endsnippet

snippet fa "for all" w
for all 
endsnippet

snippet fey "for every" w
for every 
endsnippet

snippet fe "for example" w
for example 
endsnippet

snippet fay "for any" w
for any 
endsnippet

snippet fs "for some" w
for some 
endsnippet

snippet te "there exists" w
there exists 
endsnippet

snippet ex "exist" w
exist${1:s} 
endsnippet

snippet nex "not exist" w
not exist${1:s} 
endsnippet

snippet twc "(T/t)hus we conclude" w
${1:t}hus we conclude 
endsnippet

snippet wkt "we know that" w
${1:w}e know that 
endsnippet

snippet var "variable" w
variable${1:s} 
endsnippet

snippet tfae "the following are equivalent" w
the following are equivalent 
endsnippet

snippet wlog "without loss of generality" w
without loss of generality 
endsnippet

snippet chg "change" w
change${1:s}
endsnippet

snippet prv "prove" w
${1:p}rove 
endsnippet

snippet rmk "remark" w
remark 
endsnippet

snippet eqty "equality" w
equality 
endsnippet

snippet dist "distinct" w
distinct 
endsnippet

snippet arv "arrive" w
arrive 
endsnippet


snippet lat "latter" w
latter 
endsnippet

snippet rem "remember" w
remember 
endsnippet

snippet defd "defined" w
defined 
endsnippet

snippet bde "by definition" w
by definition 
endsnippet

snippet def "definition" w
definition 
endsnippet

snippet tog "together" w
together 
endsnippet

snippet tot "total" w
total 
endsnippet

snippet parti "particular" w
particular 
endsnippet

snippet ft "fact" w
fact 
endsnippet

snippet abv "above" w
above 
endsnippet
